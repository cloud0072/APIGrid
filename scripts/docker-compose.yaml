version: "3.9"

services:

  minio:
    container_name: minio
    image: ${IMAGE_MINIO}
    pull_policy: ${IMAGE_PULL_POLICY:-if_not_present}
    restart: always
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ${DATA_PATH}/.data/minio/data:/data
      - ${DATA_PATH}/.data/minio/config:/root/.minio
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
      - TZ=${TIMEZONE}
    healthcheck:
      test: [ "CMD-SHELL", "curl -sS 'http://localhost:9000' || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 30

  redis:
    container_name: redis
    image: ${IMAGE_REDIS}
    pull_policy: ${IMAGE_PULL_POLICY:-if_not_present}
    restart: always
    command:
      [
          "redis-server",
          "--appendonly",
          "yes",
          "--requirepass",
          "${REDIS_PASSWORD}",
      ]
    ports:
      - "6379:6379"
    volumes:
      - ${DATA_PATH}/.data/redis:/data
    environment:
      - TZ=${TIMEZONE}

  mysql:
    container_name: mysql
    image: ${IMAGE_MYSQL}
    pull_policy: ${IMAGE_PULL_POLICY:-if_not_present}
    restart: always
    volumes:
      - ${DATA_PATH}/.data/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - TZ=${TIMEZONE}
    command: --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --sql_mode=IGNORE_SPACE,NO_ENGINE_SUBSTITUTION
      --lower_case_table_names=2
    healthcheck:
      test: "mysql ${MYSQL_DATABASE} -u${MYSQL_USERNAME} -p${MYSQL_PASSWORD} -e 'SELECT 1;'"
      interval: 5s
      timeout: 5s
      start_period: 30s
      retries: 60

  mongodb:
    image: ${IMAGE_MONGODB_SERVER}
    pull_policy: ${IMAGE_PULL_POLICY:-if_not_present}
    container_name: mongodb
    restart: always
    env_file:
      - "${ENV_FILE:-.env}"
    ports:
      - "27017:27017"
    environment:
      - TZ=${TIMEZONE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-apigrid}
    networks:
      - apigrid
    volumes:
      - ${DATA_PATH}/.data/mongodb:/data/mongodb
    command: --wiredTigerCacheSizeGB 4 --auth # 限制内存大小, 需要认证

  mongo-express:
    image: ${IMAGE_MONGO_EXPRESS_SERVER}
    pull_policy: ${IMAGE_PULL_POLICY:-if_not_present}
    container_name: mongo-express
    restart: always
    ports:
      - "9021:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD:-apigrid}
      - ME_CONFIG_MONGODB_SERVER=${MONGO_HOST:-192.168.4.198}

networks:
  apigrid:
    name: apigrid_default
    driver: bridge